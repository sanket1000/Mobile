//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.2045
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.API.Services.Test.DocSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetMessage", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class RetMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentEnt", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class DocumentEnt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApproveLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproveTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConnectionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.DocDistribution[] DistributionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentSubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.DocHeader HeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnAPHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApproveLevel {
            get {
                return this.ApproveLevelField;
            }
            set {
                if ((this.ApproveLevelField.Equals(value) != true)) {
                    this.ApproveLevelField = value;
                    this.RaisePropertyChanged("ApproveLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApproveType {
            get {
                return this.ApproveTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproveTypeField, value) != true)) {
                    this.ApproveTypeField = value;
                    this.RaisePropertyChanged("ApproveType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConnectionID {
            get {
                return this.ConnectionIDField;
            }
            set {
                if ((this.ConnectionIDField.Equals(value) != true)) {
                    this.ConnectionIDField = value;
                    this.RaisePropertyChanged("ConnectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.DocDistribution[] Distributions {
            get {
                return this.DistributionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributionsField, value) != true)) {
                    this.DistributionsField = value;
                    this.RaisePropertyChanged("Distributions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentID {
            get {
                return this.DocumentIDField;
            }
            set {
                if ((this.DocumentIDField.Equals(value) != true)) {
                    this.DocumentIDField = value;
                    this.RaisePropertyChanged("DocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentSubType {
            get {
                return this.DocumentSubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentSubTypeField, value) != true)) {
                    this.DocumentSubTypeField = value;
                    this.RaisePropertyChanged("DocumentSubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.DocHeader Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnAPHold {
            get {
                return this.OnAPHoldField;
            }
            set {
                if ((this.OnAPHoldField.Equals(value) != true)) {
                    this.OnAPHoldField = value;
                    this.RaisePropertyChanged("OnAPHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnHold {
            get {
                return this.OnHoldField;
            }
            set {
                if ((this.OnHoldField.Equals(value) != true)) {
                    this.OnHoldField = value;
                    this.RaisePropertyChanged("OnHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocHeader", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class DocHeader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccountingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentActionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_StampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DiscountAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DiscountDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCode1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InvoiceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MiscAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PreTaxAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Smry_Payee_Address_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Smry_Payee_Address_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Smry_Payee_CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Smry_Payee_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Smry_Payee_ZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TaxAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.DocVendor VendorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccountingDate {
            get {
                return this.AccountingDateField;
            }
            set {
                if ((this.AccountingDateField.Equals(value) != true)) {
                    this.AccountingDateField = value;
                    this.RaisePropertyChanged("AccountingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentActionType {
            get {
                return this.CurrentActionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentActionTypeField, value) != true)) {
                    this.CurrentActionTypeField = value;
                    this.RaisePropertyChanged("CurrentActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Stamp {
            get {
                return this.Date_StampField;
            }
            set {
                if ((this.Date_StampField.Equals(value) != true)) {
                    this.Date_StampField = value;
                    this.RaisePropertyChanged("Date_Stamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DiscountAmount {
            get {
                return this.DiscountAmountField;
            }
            set {
                if ((this.DiscountAmountField.Equals(value) != true)) {
                    this.DiscountAmountField = value;
                    this.RaisePropertyChanged("DiscountAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DiscountDate {
            get {
                return this.DiscountDateField;
            }
            set {
                if ((this.DiscountDateField.Equals(value) != true)) {
                    this.DiscountDateField = value;
                    this.RaisePropertyChanged("DiscountDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentDesc {
            get {
                return this.DocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentDescField, value) != true)) {
                    this.DocumentDescField = value;
                    this.RaisePropertyChanged("DocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeaderStatus {
            get {
                return this.HeaderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderStatusField, value) != true)) {
                    this.HeaderStatusField = value;
                    this.RaisePropertyChanged("HeaderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceCode {
            get {
                return this.InvoiceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCodeField, value) != true)) {
                    this.InvoiceCodeField = value;
                    this.RaisePropertyChanged("InvoiceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceCode1 {
            get {
                return this.InvoiceCode1Field;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCode1Field, value) != true)) {
                    this.InvoiceCode1Field = value;
                    this.RaisePropertyChanged("InvoiceCode1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceCode2 {
            get {
                return this.InvoiceCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCode2Field, value) != true)) {
                    this.InvoiceCode2Field = value;
                    this.RaisePropertyChanged("InvoiceCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InvoiceDate {
            get {
                return this.InvoiceDateField;
            }
            set {
                if ((this.InvoiceDateField.Equals(value) != true)) {
                    this.InvoiceDateField = value;
                    this.RaisePropertyChanged("InvoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceType {
            get {
                return this.InvoiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceTypeField, value) != true)) {
                    this.InvoiceTypeField = value;
                    this.RaisePropertyChanged("InvoiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatchType {
            get {
                return this.MatchTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchTypeField, value) != true)) {
                    this.MatchTypeField = value;
                    this.RaisePropertyChanged("MatchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MiscAmount {
            get {
                return this.MiscAmountField;
            }
            set {
                if ((this.MiscAmountField.Equals(value) != true)) {
                    this.MiscAmountField = value;
                    this.RaisePropertyChanged("MiscAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PreTaxAmount {
            get {
                return this.PreTaxAmountField;
            }
            set {
                if ((this.PreTaxAmountField.Equals(value) != true)) {
                    this.PreTaxAmountField = value;
                    this.RaisePropertyChanged("PreTaxAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Smry_Payee_Address_1 {
            get {
                return this.Smry_Payee_Address_1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Smry_Payee_Address_1Field, value) != true)) {
                    this.Smry_Payee_Address_1Field = value;
                    this.RaisePropertyChanged("Smry_Payee_Address_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Smry_Payee_Address_2 {
            get {
                return this.Smry_Payee_Address_2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Smry_Payee_Address_2Field, value) != true)) {
                    this.Smry_Payee_Address_2Field = value;
                    this.RaisePropertyChanged("Smry_Payee_Address_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Smry_Payee_City {
            get {
                return this.Smry_Payee_CityField;
            }
            set {
                if ((object.ReferenceEquals(this.Smry_Payee_CityField, value) != true)) {
                    this.Smry_Payee_CityField = value;
                    this.RaisePropertyChanged("Smry_Payee_City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Smry_Payee_Name {
            get {
                return this.Smry_Payee_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Smry_Payee_NameField, value) != true)) {
                    this.Smry_Payee_NameField = value;
                    this.RaisePropertyChanged("Smry_Payee_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Smry_Payee_ZIP {
            get {
                return this.Smry_Payee_ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.Smry_Payee_ZIPField, value) != true)) {
                    this.Smry_Payee_ZIPField = value;
                    this.RaisePropertyChanged("Smry_Payee_ZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TaxAmount {
            get {
                return this.TaxAmountField;
            }
            set {
                if ((this.TaxAmountField.Equals(value) != true)) {
                    this.TaxAmountField = value;
                    this.RaisePropertyChanged("TaxAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.DocVendor Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocDistribution", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class DocDistribution : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountsPayableAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommitmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Commitment_Line_ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Cost_Code_295Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_StampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DiscountOfferedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DistSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Exempt_1099Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JointPayeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MeterOdometerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MiscDeductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MiscDeduction2PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Misc_Entry_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Misc_Entry_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float Misc_Entry_Units_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float Misc_Entry_Units_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Operator_StampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PM_Charge_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_Charge_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_Chargeback_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_Item_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_LeaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PM_Lease_Revision_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PM_Markup_AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_Markup_Charge_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PM_Markup_PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_PropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_TenantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PM_UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PreTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RetainageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Standard_ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TaxLiabilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float Unit_CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float UnitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountsPayableAccount {
            get {
                return this.AccountsPayableAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountsPayableAccountField, value) != true)) {
                    this.AccountsPayableAccountField = value;
                    this.RaisePropertyChanged("AccountsPayableAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authorization {
            get {
                return this.AuthorizationField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizationField, value) != true)) {
                    this.AuthorizationField = value;
                    this.RaisePropertyChanged("Authorization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commitment {
            get {
                return this.CommitmentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommitmentField, value) != true)) {
                    this.CommitmentField = value;
                    this.RaisePropertyChanged("Commitment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Commitment_Line_Item {
            get {
                return this.Commitment_Line_ItemField;
            }
            set {
                if ((this.Commitment_Line_ItemField.Equals(value) != true)) {
                    this.Commitment_Line_ItemField = value;
                    this.RaisePropertyChanged("Commitment_Line_Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostCode {
            get {
                return this.CostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCodeField, value) != true)) {
                    this.CostCodeField = value;
                    this.RaisePropertyChanged("CostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cost_Code_295 {
            get {
                return this.Cost_Code_295Field;
            }
            set {
                if ((object.ReferenceEquals(this.Cost_Code_295Field, value) != true)) {
                    this.Cost_Code_295Field = value;
                    this.RaisePropertyChanged("Cost_Code_295");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_Stamp {
            get {
                return this.Date_StampField;
            }
            set {
                if ((this.Date_StampField.Equals(value) != true)) {
                    this.Date_StampField = value;
                    this.RaisePropertyChanged("Date_Stamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DiscountOffered {
            get {
                return this.DiscountOfferedField;
            }
            set {
                if ((this.DiscountOfferedField.Equals(value) != true)) {
                    this.DiscountOfferedField = value;
                    this.RaisePropertyChanged("DiscountOffered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistCode {
            get {
                return this.DistCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistCodeField, value) != true)) {
                    this.DistCodeField = value;
                    this.RaisePropertyChanged("DistCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DistSeq {
            get {
                return this.DistSeqField;
            }
            set {
                if ((this.DistSeqField.Equals(value) != true)) {
                    this.DistSeqField = value;
                    this.RaisePropertyChanged("DistSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistStatus {
            get {
                return this.DistStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DistStatusField, value) != true)) {
                    this.DistStatusField = value;
                    this.RaisePropertyChanged("DistStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Draw {
            get {
                return this.DrawField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawField, value) != true)) {
                    this.DrawField = value;
                    this.RaisePropertyChanged("Draw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Equipment {
            get {
                return this.EquipmentField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentField, value) != true)) {
                    this.EquipmentField = value;
                    this.RaisePropertyChanged("Equipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Exempt_1099 {
            get {
                return this.Exempt_1099Field;
            }
            set {
                if ((this.Exempt_1099Field.Equals(value) != true)) {
                    this.Exempt_1099Field = value;
                    this.RaisePropertyChanged("Exempt_1099");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseAccount {
            get {
                return this.ExpenseAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseAccountField, value) != true)) {
                    this.ExpenseAccountField = value;
                    this.RaisePropertyChanged("ExpenseAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extra {
            get {
                return this.ExtraField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraField, value) != true)) {
                    this.ExtraField = value;
                    this.RaisePropertyChanged("Extra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceID {
            get {
                return this.InvoiceIDField;
            }
            set {
                if ((this.InvoiceIDField.Equals(value) != true)) {
                    this.InvoiceIDField = value;
                    this.RaisePropertyChanged("InvoiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Job {
            get {
                return this.JobField;
            }
            set {
                if ((object.ReferenceEquals(this.JobField, value) != true)) {
                    this.JobField = value;
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JointPayee {
            get {
                return this.JointPayeeField;
            }
            set {
                if ((object.ReferenceEquals(this.JointPayeeField, value) != true)) {
                    this.JointPayeeField = value;
                    this.RaisePropertyChanged("JointPayee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MeterOdometer {
            get {
                return this.MeterOdometerField;
            }
            set {
                if ((this.MeterOdometerField.Equals(value) != true)) {
                    this.MeterOdometerField = value;
                    this.RaisePropertyChanged("MeterOdometer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MiscDeduction {
            get {
                return this.MiscDeductionField;
            }
            set {
                if ((this.MiscDeductionField.Equals(value) != true)) {
                    this.MiscDeductionField = value;
                    this.RaisePropertyChanged("MiscDeduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MiscDeduction2Percent {
            get {
                return this.MiscDeduction2PercentField;
            }
            set {
                if ((this.MiscDeduction2PercentField.Equals(value) != true)) {
                    this.MiscDeduction2PercentField = value;
                    this.RaisePropertyChanged("MiscDeduction2Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Misc_Entry_1 {
            get {
                return this.Misc_Entry_1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Misc_Entry_1Field, value) != true)) {
                    this.Misc_Entry_1Field = value;
                    this.RaisePropertyChanged("Misc_Entry_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Misc_Entry_2 {
            get {
                return this.Misc_Entry_2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Misc_Entry_2Field, value) != true)) {
                    this.Misc_Entry_2Field = value;
                    this.RaisePropertyChanged("Misc_Entry_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Misc_Entry_Units_1 {
            get {
                return this.Misc_Entry_Units_1Field;
            }
            set {
                if ((this.Misc_Entry_Units_1Field.Equals(value) != true)) {
                    this.Misc_Entry_Units_1Field = value;
                    this.RaisePropertyChanged("Misc_Entry_Units_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Misc_Entry_Units_2 {
            get {
                return this.Misc_Entry_Units_2Field;
            }
            set {
                if ((this.Misc_Entry_Units_2Field.Equals(value) != true)) {
                    this.Misc_Entry_Units_2Field = value;
                    this.RaisePropertyChanged("Misc_Entry_Units_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator_Stamp {
            get {
                return this.Operator_StampField;
            }
            set {
                if ((object.ReferenceEquals(this.Operator_StampField, value) != true)) {
                    this.Operator_StampField = value;
                    this.RaisePropertyChanged("Operator_Stamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PM_Charge_Date {
            get {
                return this.PM_Charge_DateField;
            }
            set {
                if ((this.PM_Charge_DateField.Equals(value) != true)) {
                    this.PM_Charge_DateField = value;
                    this.RaisePropertyChanged("PM_Charge_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Charge_Type {
            get {
                return this.PM_Charge_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_Charge_TypeField, value) != true)) {
                    this.PM_Charge_TypeField = value;
                    this.RaisePropertyChanged("PM_Charge_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Chargeback_Description {
            get {
                return this.PM_Chargeback_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_Chargeback_DescriptionField, value) != true)) {
                    this.PM_Chargeback_DescriptionField = value;
                    this.RaisePropertyChanged("PM_Chargeback_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Item_ID {
            get {
                return this.PM_Item_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_Item_IDField, value) != true)) {
                    this.PM_Item_IDField = value;
                    this.RaisePropertyChanged("PM_Item_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Lease {
            get {
                return this.PM_LeaseField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_LeaseField, value) != true)) {
                    this.PM_LeaseField = value;
                    this.RaisePropertyChanged("PM_Lease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PM_Lease_Revision_Num {
            get {
                return this.PM_Lease_Revision_NumField;
            }
            set {
                if ((this.PM_Lease_Revision_NumField.Equals(value) != true)) {
                    this.PM_Lease_Revision_NumField = value;
                    this.RaisePropertyChanged("PM_Lease_Revision_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PM_Markup_Amount {
            get {
                return this.PM_Markup_AmountField;
            }
            set {
                if ((this.PM_Markup_AmountField.Equals(value) != true)) {
                    this.PM_Markup_AmountField = value;
                    this.RaisePropertyChanged("PM_Markup_Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Markup_Charge_Type {
            get {
                return this.PM_Markup_Charge_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_Markup_Charge_TypeField, value) != true)) {
                    this.PM_Markup_Charge_TypeField = value;
                    this.RaisePropertyChanged("PM_Markup_Charge_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PM_Markup_Percent {
            get {
                return this.PM_Markup_PercentField;
            }
            set {
                if ((this.PM_Markup_PercentField.Equals(value) != true)) {
                    this.PM_Markup_PercentField = value;
                    this.RaisePropertyChanged("PM_Markup_Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Property {
            get {
                return this.PM_PropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_PropertyField, value) != true)) {
                    this.PM_PropertyField = value;
                    this.RaisePropertyChanged("PM_Property");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Tenant {
            get {
                return this.PM_TenantField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_TenantField, value) != true)) {
                    this.PM_TenantField = value;
                    this.RaisePropertyChanged("PM_Tenant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PM_Unit {
            get {
                return this.PM_UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PM_UnitField, value) != true)) {
                    this.PM_UnitField = value;
                    this.RaisePropertyChanged("PM_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PreTax {
            get {
                return this.PreTaxField;
            }
            set {
                if ((this.PreTaxField.Equals(value) != true)) {
                    this.PreTaxField = value;
                    this.RaisePropertyChanged("PreTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Retainage {
            get {
                return this.RetainageField;
            }
            set {
                if ((this.RetainageField.Equals(value) != true)) {
                    this.RetainageField = value;
                    this.RaisePropertyChanged("Retainage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Standard_Item {
            get {
                return this.Standard_ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.Standard_ItemField, value) != true)) {
                    this.Standard_ItemField = value;
                    this.RaisePropertyChanged("Standard_Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxGroup {
            get {
                return this.TaxGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxGroupField, value) != true)) {
                    this.TaxGroupField = value;
                    this.RaisePropertyChanged("TaxGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TaxLiability {
            get {
                return this.TaxLiabilityField;
            }
            set {
                if ((this.TaxLiabilityField.Equals(value) != true)) {
                    this.TaxLiabilityField = value;
                    this.RaisePropertyChanged("TaxLiability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Unit_Cost {
            get {
                return this.Unit_CostField;
            }
            set {
                if ((this.Unit_CostField.Equals(value) != true)) {
                    this.Unit_CostField = value;
                    this.RaisePropertyChanged("Unit_Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocVendor", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class DocVendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationDataDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class AnnotationDataDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.AnnotationPageDto[] PagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.AnnotationPageDto[] Pages {
            get {
                return this.PagesField;
            }
            set {
                if ((object.ReferenceEquals(this.PagesField, value) != true)) {
                    this.PagesField = value;
                    this.RaisePropertyChanged("Pages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationPageDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class AnnotationPageDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.AnnotationLayerDto[] LayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.AnnotationLayerDto[] Layers {
            get {
                return this.LayersField;
            }
            set {
                if ((object.ReferenceEquals(this.LayersField, value) != true)) {
                    this.LayersField = value;
                    this.RaisePropertyChanged("Layers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationLayerDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class AnnotationLayerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.PenAnnotationDto[] PenAnnotationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.RectangleAnnotationDto[] RectanngleAnnotationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.TextAnnotationDto[] TextAnnotationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.PenAnnotationDto[] PenAnnotations {
            get {
                return this.PenAnnotationsField;
            }
            set {
                if ((object.ReferenceEquals(this.PenAnnotationsField, value) != true)) {
                    this.PenAnnotationsField = value;
                    this.RaisePropertyChanged("PenAnnotations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.RectangleAnnotationDto[] RectanngleAnnotations {
            get {
                return this.RectanngleAnnotationsField;
            }
            set {
                if ((object.ReferenceEquals(this.RectanngleAnnotationsField, value) != true)) {
                    this.RectanngleAnnotationsField = value;
                    this.RaisePropertyChanged("RectanngleAnnotations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.TextAnnotationDto[] TextAnnotations {
            get {
                return this.TextAnnotationsField;
            }
            set {
                if ((object.ReferenceEquals(this.TextAnnotationsField, value) != true)) {
                    this.TextAnnotationsField = value;
                    this.RaisePropertyChanged("TextAnnotations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PenAnnotationDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class PenAnnotationDto : Core.API.Services.Test.DocSvc.PointBaseAnnotationDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.PenDto PenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.PenDto Pen {
            get {
                return this.PenField;
            }
            set {
                if ((object.ReferenceEquals(this.PenField, value) != true)) {
                    this.PenField = value;
                    this.RaisePropertyChanged("Pen");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RectangleAnnotationDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class RectangleAnnotationDto : Core.API.Services.Test.DocSvc.AnnotationDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.BrushDto FillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.PenDto OutlineField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.BrushDto Fill {
            get {
                return this.FillField;
            }
            set {
                if ((object.ReferenceEquals(this.FillField, value) != true)) {
                    this.FillField = value;
                    this.RaisePropertyChanged("Fill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.PenDto Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((object.ReferenceEquals(this.OutlineField, value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextAnnotationDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class TextAnnotationDto : Core.API.Services.Test.DocSvc.AnnotationDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.StringAlignment AlignmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowEditingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.BrushDto FillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.FontDto FontField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.BrushDto FontBrushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.StringAlignment LineAlignmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MinimizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.PenDto OutlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PaddingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.StringTrimming TrimmingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.StringAlignment Alignment {
            get {
                return this.AlignmentField;
            }
            set {
                if ((this.AlignmentField.Equals(value) != true)) {
                    this.AlignmentField = value;
                    this.RaisePropertyChanged("Alignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowEditing {
            get {
                return this.AllowEditingField;
            }
            set {
                if ((this.AllowEditingField.Equals(value) != true)) {
                    this.AllowEditingField = value;
                    this.RaisePropertyChanged("AllowEditing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoSize {
            get {
                return this.AutoSizeField;
            }
            set {
                if ((this.AutoSizeField.Equals(value) != true)) {
                    this.AutoSizeField = value;
                    this.RaisePropertyChanged("AutoSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.BrushDto Fill {
            get {
                return this.FillField;
            }
            set {
                if ((object.ReferenceEquals(this.FillField, value) != true)) {
                    this.FillField = value;
                    this.RaisePropertyChanged("Fill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.FontDto Font {
            get {
                return this.FontField;
            }
            set {
                if ((object.ReferenceEquals(this.FontField, value) != true)) {
                    this.FontField = value;
                    this.RaisePropertyChanged("Font");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.BrushDto FontBrush {
            get {
                return this.FontBrushField;
            }
            set {
                if ((object.ReferenceEquals(this.FontBrushField, value) != true)) {
                    this.FontBrushField = value;
                    this.RaisePropertyChanged("FontBrush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.StringAlignment LineAlignment {
            get {
                return this.LineAlignmentField;
            }
            set {
                if ((this.LineAlignmentField.Equals(value) != true)) {
                    this.LineAlignmentField = value;
                    this.RaisePropertyChanged("LineAlignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Minimized {
            get {
                return this.MinimizedField;
            }
            set {
                if ((this.MinimizedField.Equals(value) != true)) {
                    this.MinimizedField = value;
                    this.RaisePropertyChanged("Minimized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.PenDto Outline {
            get {
                return this.OutlineField;
            }
            set {
                if ((object.ReferenceEquals(this.OutlineField, value) != true)) {
                    this.OutlineField = value;
                    this.RaisePropertyChanged("Outline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Padding {
            get {
                return this.PaddingField;
            }
            set {
                if ((this.PaddingField.Equals(value) != true)) {
                    this.PaddingField = value;
                    this.RaisePropertyChanged("Padding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.StringTrimming Trimming {
            get {
                return this.TrimmingField;
            }
            set {
                if ((this.TrimmingField.Equals(value) != true)) {
                    this.TrimmingField = value;
                    this.RaisePropertyChanged("Trimming");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnotationDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Core.API.Services.Test.DocSvc.RectangleAnnotationDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Core.API.Services.Test.DocSvc.TextAnnotationDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Core.API.Services.Test.DocSvc.PointBaseAnnotationDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Core.API.Services.Test.DocSvc.PenAnnotationDto))]
    public partial class AnnotationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanMirrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanResizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanRotateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.PointDto LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float RotationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.SizeDto SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolTipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanMirror {
            get {
                return this.CanMirrorField;
            }
            set {
                if ((this.CanMirrorField.Equals(value) != true)) {
                    this.CanMirrorField = value;
                    this.RaisePropertyChanged("CanMirror");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanMove {
            get {
                return this.CanMoveField;
            }
            set {
                if ((this.CanMoveField.Equals(value) != true)) {
                    this.CanMoveField = value;
                    this.RaisePropertyChanged("CanMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanResize {
            get {
                return this.CanResizeField;
            }
            set {
                if ((this.CanResizeField.Equals(value) != true)) {
                    this.CanResizeField = value;
                    this.RaisePropertyChanged("CanResize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanRotate {
            get {
                return this.CanRotateField;
            }
            set {
                if ((this.CanRotateField.Equals(value) != true)) {
                    this.CanRotateField = value;
                    this.RaisePropertyChanged("CanRotate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSelect {
            get {
                return this.CanSelectField;
            }
            set {
                if ((this.CanSelectField.Equals(value) != true)) {
                    this.CanSelectField = value;
                    this.RaisePropertyChanged("CanSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.PointDto Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedTime {
            get {
                return this.ModifiedTimeField;
            }
            set {
                if ((this.ModifiedTimeField.Equals(value) != true)) {
                    this.ModifiedTimeField = value;
                    this.RaisePropertyChanged("ModifiedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Rotation {
            get {
                return this.RotationField;
            }
            set {
                if ((this.RotationField.Equals(value) != true)) {
                    this.RotationField = value;
                    this.RaisePropertyChanged("Rotation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.SizeDto Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolTip {
            get {
                return this.ToolTipField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolTipField, value) != true)) {
                    this.ToolTipField = value;
                    this.RaisePropertyChanged("ToolTip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PointDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class PointDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SizeDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class SizeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PointBaseAnnotationDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Core.API.Services.Test.DocSvc.PenAnnotationDto))]
    public partial class PointBaseAnnotationDto : Core.API.Services.Test.DocSvc.AnnotationDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Core.API.Services.Test.DocSvc.PointDto[] PointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Core.API.Services.Test.DocSvc.PointDto[] Points {
            get {
                return this.PointsField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PenDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class PenDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrushDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class BrushDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FontDto", Namespace="http://schemas.datacontract.org/2004/07/Core.API.DocumentSvc.Entity")]
    [System.SerializableAttribute()]
    public partial class FontDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ItalicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StrikeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnderlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bold {
            get {
                return this.BoldField;
            }
            set {
                if ((this.BoldField.Equals(value) != true)) {
                    this.BoldField = value;
                    this.RaisePropertyChanged("Bold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Italic {
            get {
                return this.ItalicField;
            }
            set {
                if ((this.ItalicField.Equals(value) != true)) {
                    this.ItalicField = value;
                    this.RaisePropertyChanged("Italic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Strikeout {
            get {
                return this.StrikeoutField;
            }
            set {
                if ((this.StrikeoutField.Equals(value) != true)) {
                    this.StrikeoutField = value;
                    this.RaisePropertyChanged("Strikeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Underline {
            get {
                return this.UnderlineField;
            }
            set {
                if ((this.UnderlineField.Equals(value) != true)) {
                    this.UnderlineField = value;
                    this.RaisePropertyChanged("Underline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DocSvc.IDocument")]
    public interface IDocument {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/GetDocument", ReplyAction="http://tempuri.org/IDocument/GetDocumentResponse")]
        string GetDocument(int DocumentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/GetDocuments", ReplyAction="http://tempuri.org/IDocument/GetDocumentsResponse")]
        string GetDocuments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/GetDocumentNotes", ReplyAction="http://tempuri.org/IDocument/GetDocumentNotesResponse")]
        string GetDocumentNotes(int DocumentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/SaveComment", ReplyAction="http://tempuri.org/IDocument/SaveCommentResponse")]
        Core.API.Services.Test.DocSvc.RetMessage SaveComment(int DocumentID, string NoteText, System.DateTime NoteDate, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/RejectDocument", ReplyAction="http://tempuri.org/IDocument/RejectDocumentResponse")]
        string RejectDocument(int DocumentID, int ActionLevel, int RejectLevel, string RejectReason, System.DateTime RejectDate, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/DeleteDocument", ReplyAction="http://tempuri.org/IDocument/DeleteDocumentResponse")]
        string DeleteDocument(int DocumentID, int ApproveLevel, string DeleteReason, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/APHoldDocument", ReplyAction="http://tempuri.org/IDocument/APHoldDocumentResponse")]
        string APHoldDocument(int DocumentID, int ApproveLevel, string APHoldReason, bool APHold, System.DateTime APHoldDate, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/HoldDocument", ReplyAction="http://tempuri.org/IDocument/HoldDocumentResponse")]
        string HoldDocument(int DocumentID, int ApproveLevel, string HoldReason, System.DateTime HoldDate, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/GetDocumentBinary", ReplyAction="http://tempuri.org/IDocument/GetDocumentBinaryResponse")]
        byte[] GetDocumentBinary(int DocumentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/SaveDocumentBinary", ReplyAction="http://tempuri.org/IDocument/SaveDocumentBinaryResponse")]
        string SaveDocumentBinary(int DocumentID, byte[] DocumentBinary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/SaveDocument", ReplyAction="http://tempuri.org/IDocument/SaveDocumentResponse")]
        string SaveDocument(Core.API.Services.Test.DocSvc.DocumentEnt Doc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/ApproveDocument", ReplyAction="http://tempuri.org/IDocument/ApproveDocumentResponse")]
        string ApproveDocument(int DocumentID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/GetDocumentAnnotation", ReplyAction="http://tempuri.org/IDocument/GetDocumentAnnotationResponse")]
        Core.API.Services.Test.DocSvc.AnnotationDataDto GetDocumentAnnotation(int DocumentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocument/SaveDocumentAnnotation", ReplyAction="http://tempuri.org/IDocument/SaveDocumentAnnotationResponse")]
        string SaveDocumentAnnotation(int DocumentID, Core.API.Services.Test.DocSvc.AnnotationDataDto Annotation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentChannel : Core.API.Services.Test.DocSvc.IDocument, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentClient : System.ServiceModel.ClientBase<Core.API.Services.Test.DocSvc.IDocument>, Core.API.Services.Test.DocSvc.IDocument {
        
        public DocumentClient() {
        }
        
        public DocumentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDocument(int DocumentID) {
            return base.Channel.GetDocument(DocumentID);
        }
        
        public string GetDocuments() {
            return base.Channel.GetDocuments();
        }
        
        public string GetDocumentNotes(int DocumentID) {
            return base.Channel.GetDocumentNotes(DocumentID);
        }
        
        public Core.API.Services.Test.DocSvc.RetMessage SaveComment(int DocumentID, string NoteText, System.DateTime NoteDate, int UserId) {
            return base.Channel.SaveComment(DocumentID, NoteText, NoteDate, UserId);
        }
        
        public string RejectDocument(int DocumentID, int ActionLevel, int RejectLevel, string RejectReason, System.DateTime RejectDate, int UserId) {
            return base.Channel.RejectDocument(DocumentID, ActionLevel, RejectLevel, RejectReason, RejectDate, UserId);
        }
        
        public string DeleteDocument(int DocumentID, int ApproveLevel, string DeleteReason, int UserId) {
            return base.Channel.DeleteDocument(DocumentID, ApproveLevel, DeleteReason, UserId);
        }
        
        public string APHoldDocument(int DocumentID, int ApproveLevel, string APHoldReason, bool APHold, System.DateTime APHoldDate, int UserId) {
            return base.Channel.APHoldDocument(DocumentID, ApproveLevel, APHoldReason, APHold, APHoldDate, UserId);
        }
        
        public string HoldDocument(int DocumentID, int ApproveLevel, string HoldReason, System.DateTime HoldDate, int UserId) {
            return base.Channel.HoldDocument(DocumentID, ApproveLevel, HoldReason, HoldDate, UserId);
        }
        
        public byte[] GetDocumentBinary(int DocumentID) {
            return base.Channel.GetDocumentBinary(DocumentID);
        }
        
        public string SaveDocumentBinary(int DocumentID, byte[] DocumentBinary) {
            return base.Channel.SaveDocumentBinary(DocumentID, DocumentBinary);
        }
        
        public string SaveDocument(Core.API.Services.Test.DocSvc.DocumentEnt Doc) {
            return base.Channel.SaveDocument(Doc);
        }
        
        public string ApproveDocument(int DocumentID, int UserID) {
            return base.Channel.ApproveDocument(DocumentID, UserID);
        }
        
        public Core.API.Services.Test.DocSvc.AnnotationDataDto GetDocumentAnnotation(int DocumentID) {
            return base.Channel.GetDocumentAnnotation(DocumentID);
        }
        
        public string SaveDocumentAnnotation(int DocumentID, Core.API.Services.Test.DocSvc.AnnotationDataDto Annotation) {
            return base.Channel.SaveDocumentAnnotation(DocumentID, Annotation);
        }
    }
}
